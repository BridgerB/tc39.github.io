- title: Function.prototype.toString revision
  id: Function-prototype-toString-revision
  description: for functions defined using ECMAScript code, toString must return source text slice from beginning of first token to end of last token matched by the appropriate grammar production
  authors:
    - Michael Ficarra
  champions:
    - Michael Ficarra
  tests:
    - https://github.com/tc39/test262/issues/1163

- title: globalThis
  id: proposal-global
  description: ECMAScript Proposal, specs, and reference implementation for globalThis

  authors:
    - Jordan Harband
  champions:
    - Jordan Harband
  tests:
    - https://github.com/tc39/test262/issues/765

- title: import()
  id: proposal-dynamic-import
  description: Adding a "function-like" import() module loading syntactic form to JavaScript
  authors:
    - Domenic Denicola
  champions:
    - Domenic Denicola
  tests:
    - https://github.com/tc39/test262/issues/1164
  example: >
    const main = document.querySelector("main");
      for (const link of document.querySelectorAll("nav > a")) {
        link.addEventListener("click", e => {
          e.preventDefault();

          import(`./section-modules/${link.dataset.entryModule}.js`)
            .then(module => {
              module.loadPageInto(main);
            })
            .catch(err => {
              main.textContent = err.message;
            });
        });
      }

- title: Legacy RegExp features in JavaScript
  id: proposal-regexp-legacy-features
  description: This is a specification draft for the legacy (deprecated) RegExp features in JavaScript, i.e., static properties of the constructor like RegExp.$1 as well as the RegExp.prototype.compile method.
  authors:
    - Claude Pache
  champions:
    - Mark Miller
    - Claude Pache
  tests:
    - https://github.com/tc39/test262/issues/1165

- title: BigInt
  id: proposal-bigint
  description: Arbitrary precision integers in JavaScript
  authors:
    - Daniel Ehrenberg
  champions:
    - Daniel Ehrenberg
  tests:
    - https://github.com/tc39/test262/issues/1056

- title: import.meta
  id: proposal-import-meta
  description: A proposal for adding an import.meta metaproperty to JavaScript, for holding host-specific metadata about the current module.
  authors:
    - Domenic Denicola
  champions:
    - Domenic Denicola
  tests:
    - https://github.com/tc39/test262/issues/1342

- title: Private instance methods and accessors
  id: proposal-private-methods
  description: Keeping state and behavior private to a class lets library authors present a clear, stable interface, while changing their code over time behind the scenes.
  authors:
    - Daniel Ehrenberg
  champions:
    - Daniel Ehrenberg
    - Kevin Gibbons
  tests:
    - https://github.com/tc39/test262/issues/1343

- title: Array.prototype.{flat,flatMap}
  id: proposal-flatMap
  description: Proposal for flatten and flatMap on arrays
  authors:
    - Brian Terlson
    - Michael Ficarra
  champions:
    - Brian Terlson
    - Michael Ficarra

- title: Class Public Instance Fields & Private Instance Fields
  id: proposal-class-fields
  description: This proposes a combined vision for public fields and private fields, drawing on the earlier Orthogonal Classes and Class Evaluation Order proposals.
  authors:
    - Daniel Ehrenberg
    - Kevin Gibbons
  champions:
    - Daniel Ehrenberg
    - Jeff Morrison
    - Kevin Smith
    - Kevin Gibbons
  tests:
    - https://github.com/tc39/test262/issues/1161

- title: Static class fields and private static methods
  id: proposal-static-class-features
  description: This proposal adds Static public fields, Static private methods and Static private fields
  authors:
    - Daniel Ehrenberg
    - Kevin Gibbons
    - Jeff Morrison
    - Kevin Smith 
  champions:
    - Shu-Yu Guo
    - Daniel Ehrenberg

- title: String.prototype.{trimStart,trimEnd}
  id: proposal-string-left-right-trim
  description: A proposal to extend ECMA-262 syntax into a superset of JSON.
  authors:
    - Sebastian Markbåge
  champions:
    - Sebastian Markbåge
  tests:
    - https://github.com/tc39/test262/pull/1246

- title: String.prototype.matchAll
  id: proposal-string-matchall
  description: If given a string, and either a sticky or a global regular expression which has multiple capturing groups, we often want to iterate through all of the matches.
  authors:
    - Jordan Harband
  champions:
    - Jordan Harband

- title: Symbol.prototype.description
  id: proposal-Symbol-description
  description: proposal to add Symbol.prototype.description
  authors:
    - Michael Ficarra
  champions:
    - Michael Ficarra